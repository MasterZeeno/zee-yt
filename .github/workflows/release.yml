name: Update

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  setup-env:
    runs-on: ubuntu-latest
    outputs:
      AUTHOR: ${{ steps.set-env.outputs.AUTHOR }}
      REPO: ${{ steps.set-env.outputs.REPO }}
      TAGNAME: ${{ steps.set-env.outputs.TAGNAME }}
    steps:
      - name: Set Global Variables
        id: set-env
        run: |
          echo "AUTHOR=${{ github.repository_owner }}" >> "$GITHUB_OUTPUT"
          echo "REPO=$(basename ${{ github.repository }})" >> "$GITHUB_OUTPUT"
          echo "TAGNAME=$(date +'%Y%m%d')" >> "$GITHUB_OUTPUT"

  update-release:
    runs-on: ubuntu-latest
    needs: setup-env
    strategy:
      matrix:
        type: [monet, black]
    env:
      AUTHOR: ${{ needs.setup-env.outputs.AUTHOR }}
      REPO: ${{ needs.setup-env.outputs.REPO }}
      TAGNAME: ${{ needs.setup-env.outputs.TAGNAME }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          sparse-checkout-cone-mode: false

      - name: Configure sparse-checkout and Set Environment Variables
        run: |
          export MATRIX="${{ matrix.type }}"
          export JSON_FILE="./$REPO/${MATRIX}-og.json"
          export RELEASE_FILE="./$REPO-${MATRIX}-og.zip"

          git sparse-checkout init --cone
          git sparse-checkout set "$JSON_FILE" "*.sh"
          git read-tree -mu HEAD

      - name: Run Zee Script
        run: |
          chmod +x zee.sh
          ./zee.sh "$AUTHOR" "$REPO" "$MATRIX" "$TAGNAME"

      - name: Verify Release File
        run: |
          if [ -f "$RELEASE_FILE" ]; then
            export TO_UPDATE=true
          else
            export TO_UPDATE=false
          fi

      - name: Updated
        if: env.TO_UPDATE == 'false'
        run: echo "You're using the latest version."

      - name: Create GitHub Release
        if: env.TO_UPDATE == 'true'
        uses: softprops/action-gh-release@v2
        with:
          files: "$RELEASE_FILE"
          tag_name: "$TAGNAME"
          name: "$REPO - $TAGNAME"
          body: "$AUTHOR YouTube Lite Magisk Module."
          draft: false
          prerelease: false

      - name: Commit and Push Changes
        if: env.TO_UPDATE == 'true'
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git pull
          git add "$JSON_FILE"
          git commit -m "Auto-update YouTube (${MATRIX}-og)"
          git push origin main
